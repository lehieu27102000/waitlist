{"version":3,"file":"waitlist.min.js","mappings":"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","sources":["webpack://BlueOtter/./waitlist/js/app.js"],"sourcesContent":["if (typeof jQuery === 'undefined') {\r\n    const script = document.createElement('script');\r\n    script.src = 'https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js';\r\n\r\n    script.onload = function () {\r\n        initWaitlist();\r\n    };\r\n\r\n    document.head.appendChild(script);\r\n} else {\r\n    initWaitlist();\r\n}\r\n\r\n// Hàm khởi tạo waitlist\r\nasync function initWaitlist() {\r\n    jQuery(document).ready(async function ($) {\r\n        try {\r\n            const selectors = {\r\n                collection: \".c7-product-collection\",\r\n                collectionProduct: \".c7-product\",\r\n                c7Wrapper: \"c7-content\",\r\n                waitlist: \".c7-waitlist\",\r\n                form: \"form\",\r\n                showModal: \".show-waitlist-modal\",\r\n                joinWaitlist: \".waitlist-submit\",\r\n                waitlistModal: \".waitlist-modal-wrapper\",\r\n                waitlistEmail: \".waitlist-email\",\r\n                waitlistModalClose: \".close-wailtlist-modal\",\r\n                waitlistNotification: \".waitlist-notification\",\r\n                waitlistForm: \".waitlist-form\",\r\n            };\r\n            const tenantId = $(\"#waitlist-javascript\").data(\"tenant\")\r\n\r\n            const createBasicAuth = (credentials) => btoa(credentials);\r\n\r\n            const credentials = 'waitlist:qsoINUkmk1vVLVhzN3M0zYlf2goxXixT06iRXt9X9jBBF624cbuvv38RvjpwXmVo';\r\n            const base64Credentials = createBasicAuth(credentials);\r\n            var config = {\r\n                baseUrl: 'https://api.commerce7.com/v1',\r\n                tenantId: tenantId,\r\n                credentials: base64Credentials\r\n            };\r\n\r\n            async function getCustomerData(token) {\r\n                if (!token || !config.tenantId) {\r\n                    return {\r\n                        success: false,\r\n                        data: null\r\n                    };\r\n                }\r\n\r\n                try {\r\n                    const response = await fetch(`${config.baseUrl}/customer/self`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Authorization': token,\r\n                            'tenant': config.tenantId,\r\n                            'Content-Type': 'application/json'\r\n                        }\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error('API request failed');\r\n                    }\r\n\r\n                    const data = await response.json();\r\n                    return {\r\n                        success: true,\r\n                        data: data\r\n                    };\r\n                } catch (error) {\r\n                    console.error('Error fetching customer data:', error);\r\n                    return {\r\n                        success: false,\r\n                        data: null\r\n                    };\r\n                }\r\n            }\r\n            async function callCommerce7Api(endpoint, options = null, method = 'GET') {\r\n                try {\r\n                    const queryString = method === 'GET' && options ? '?' + new URLSearchParams(options).toString() : '';\r\n\r\n                    const response = await fetch(`${config.baseUrl}${endpoint}${queryString}`, {\r\n                        method: method,\r\n                        headers: {\r\n                            'Authorization': `Basic ${config.credentials}`,\r\n                            'tenant': config.tenantId,\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: method === 'POST' ? JSON.stringify(options) : null\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error('Commerce7 Response Error');\r\n                    }\r\n\r\n                    return await response.json();\r\n                } catch (error) {\r\n                    console.error('API Error:', error);\r\n                    throw error;\r\n                }\r\n            }\r\n            var configSetting = {\r\n                baseUrl: 'https://doant72.sg-host.com/',\r\n                tenantId: tenantId,\r\n            };\r\n            async function getSetting(endpoint, options = null, method = 'GET') {\r\n                try {\r\n                    const queryString = method === 'GET' && options ? '?' + new URLSearchParams(options).toString() : '';\r\n\r\n                    const response = await fetch(`${configSetting.baseUrl}${endpoint}${queryString}`, {\r\n                        method: method,\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n\r\n                        },\r\n                        body: method === 'POST' ? JSON.stringify(options) : null\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error('App Waitlist Response Error');\r\n                    }\r\n\r\n                    return await response.json();\r\n                } catch (error) {\r\n                    console.error('API Error:', error);\r\n                    throw error;\r\n                }\r\n            }\r\n            const res = await callCommerce7Api('/customer');\r\n            if (!res) {\r\n                return;\r\n            }\r\n            var setting = await getSetting('/api/waitlist-settings', { tenant_id: tenantId })\r\n            console.log(setting)\r\n            if (!setting.enabled) {\r\n                return\r\n            }\r\n            const buttonText = setting.button_text\r\n            var buttonTextWaitlist = JSON.parse(buttonText).btn_text\r\n            var buttonTextWaitlisted = JSON.parse(buttonText).btn_text_submitted\r\n            var buttonStyle = JSON.parse(setting.button_style)\r\n            const cssString = `\r\n    .btn-primary {\r\n        background-color: ${buttonStyle.backgroundColor};\r\n        color: ${buttonStyle.textColor};\r\n        outline: ${buttonStyle.outlineWidth} ${buttonStyle.outlineStyle} ${buttonStyle.outlineColor};\r\n    }\r\n    .btn-primary:hover {\r\n        background-color: ${buttonStyle.hoverBackgroundColor};\r\n        color: ${buttonStyle.hoverTextColor};\r\n    }\r\n`;\r\n\r\n            const styleTag = document.createElement(\"style\");\r\n            styleTag.innerHTML = cssString;\r\n            document.head.appendChild(styleTag);\r\n            var customer = {};\r\n            var lastClickedButton = null;\r\n            const triggerProducts = async () => {\r\n                try {\r\n                    const token = getCookie('customerToken');\r\n                    const response = await getCustomerData(token);\r\n                    customer = response.data\r\n                    const collections = document.querySelectorAll(selectors.collection);\r\n                    if (collections) {\r\n                        collections.forEach((collection) => {\r\n                            new MutationObserver((_, observer) => {\r\n                                const products = collection.querySelectorAll(\r\n                                    selectors.collectionProduct\r\n                                );\r\n                                if (products) {\r\n                                    products.forEach((product) => {\r\n                                        const waitlist = product.querySelector(selectors.waitlist);\r\n                                        // Check Sold Out & Render Join Waitlist\r\n\r\n                                        const atcForm = product.querySelector(selectors.form);\r\n                                        const messError = product.querySelector(\".c7-message\");\r\n                                        const loginMess = product.querySelector(\".c7-product__login-message\");\r\n                                        if (!atcForm) {\r\n                                            const productAnchor = product.querySelector(\"a\");\r\n                                            const productLink = productAnchor.getAttribute(\"href\");\r\n                                            renderWaitlistContent(productLink, messError, loginMess, function (content) {\r\n                                                waitlist.innerHTML = content;\r\n                                            });\r\n\r\n                                        }\r\n                                    });\r\n                                    observer.disconnect();\r\n                                }\r\n                            }).observe(collection, { childList: true, subtree: true });\r\n                        });\r\n                    }\r\n\r\n                    const c7Wrapper = document.getElementById(selectors.c7Wrapper);\r\n\r\n                    if (c7Wrapper && window.location.href.includes(\"/product/\")) {\r\n                        new MutationObserver((_, observer) => {\r\n                            const waitlist = document.querySelector(selectors.waitlist);\r\n                            if (waitlist) {\r\n                                const atcForm = c7Wrapper.querySelector(selectors.form);\r\n                                const messError = c7Wrapper.querySelector(\".c7-message\");\r\n                                const loginMess = c7Wrapper.querySelector(\".c7-product__login-message\");\r\n                                if (!atcForm) {\r\n                                    renderWaitlistContent(window.location.href, messError, loginMess, function (content) {\r\n                                        waitlist.innerHTML = content;\r\n                                    });\r\n                                }\r\n                                observer.disconnect();\r\n                            }\r\n                        }).observe(c7Wrapper, { childList: true, subtree: true });\r\n                    }\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            };\r\n\r\n\r\n            // Hàm render waitlist content đã được cập nhật\r\n            function renderWaitlistContent(productLink, messError, loginMess, callback) {\r\n                const parts = productLink.split(\"/\");\r\n                const title = parts.pop() || parts.pop();\r\n                let isSoldOut = false;\r\n                let html = '';\r\n                if (!customer) {\r\n                    if (!messError && !loginMess) {\r\n                        html += '<h5 class=\"product-soldout\">Sold Out</h5>';\r\n                        html += `<button class=\"btn-primary show-waitlist-modal\" data-title=\"${title}\">${buttonTextWaitlist}</button>`;\r\n                    }\r\n                    callback(html);\r\n                    return;\r\n                }\r\n\r\n                if (!messError && !loginMess) {\r\n                    isSoldOut = true\r\n                    html += '<h5 class=\"product-soldout\">Sold Out</h5>';\r\n                }\r\n\r\n                html += `<button class=\"btn-primary show-waitlist-modal ${isSoldOut ? '' : 'for-club'}\" data-title=\"${title}\">${buttonTextWaitlist}</button>`;\r\n                callback(html);\r\n            }\r\n\r\n            const getCookie = (cookieName) => {\r\n                var name = cookieName + \"=\";\r\n                var decodedCookie = decodeURIComponent(document.cookie);\r\n                var cookieArray = decodedCookie.split(';');\r\n                for (var i = 0; i < cookieArray.length; i++) {\r\n                    var cookie = cookieArray[i];\r\n                    while (cookie.charAt(0) === ' ') {\r\n                        cookie = cookie.substring(1);\r\n                    }\r\n                    if (cookie.indexOf(name) === 0) {\r\n                        return cookie.substring(name.length, cookie.length);\r\n                    }\r\n                }\r\n                return \"\";\r\n            }\r\n\r\n            jQuery(document).on(\"click\", selectors.showModal, function (e) {\r\n                jQuery('.c7-product-popup-close').click();\r\n                const title = jQuery(this).data(\"title\");\r\n                let modalContent = ''\r\n                if ($(this).hasClass('for-club')) {\r\n                    renderModalForClub($(this))\r\n                    return;\r\n                }\r\n                jQuery(\"body\").append(renderModalForSoldout(modalContent, title, $(this)));\r\n            });\r\n            const renderModalForClub = (element) => {\r\n                if (!customer) {\r\n                    return\r\n                }\r\n                handleAssignTag(element)\r\n                return;\r\n            }\r\n            const renderModalForSoldout = (modalContent, titleProduct, element) => {\r\n                if (customer) {\r\n                    handleAssignTag(element)\r\n                    return\r\n                }\r\n                modalContent =\r\n                    `<div class=\"waitlist-modal-wrapper\" id=\"waitlist-modal\"><div class=\"waitlist-modal-content\"><span class=\"close-wailtlist-modal\">+</span><h2>${setting.popup_title}</h2><p>${setting.popup_body}</p><div class=\"waitlist-form\"><label>Email Address *</label><input type=\"email\" class=\"waitlist-email\"><p class=\"waitlist-notification\"></p><button class=\"btn-primary waitlist-submit\" data-title=\"${titleProduct}\">Submit</button></div></div></div>`;\r\n                lastClickedButton = element\r\n                return modalContent;\r\n            }\r\n            const handleAssignTag = async (element) => {\r\n                try {\r\n                    const email = customer && customer.emails && customer.emails[0] && customer.emails[0].email ? customer.emails[0].email : jQuery(selectors.waitlistEmail).val();\r\n                    const title = element.data(\"title\");\r\n\r\n                    jQuery(selectors.waitlistNotification).html(\"\");\r\n                    if (!validateEmail(email) || !email) {\r\n                        jQuery(selectors.waitlistNotification).html('Please enter your email and make sure it is in the correct format.');\r\n                        return;\r\n                    }\r\n                    jQuery(\"body\").append('<div class=\"waitlist-modal-wrapper loading-modal\" id=\"loading-modal\"><div class=\"waitlist-modal-content\"><div class=\"loading-spinner\"></div></div></div>');\r\n                    const customers = await callCommerce7Api(\"/customer/\", { q: email });\r\n                    let customerId;\r\n                    if (customers.total === 0) {\r\n                        const newCustomer = await callCommerce7Api(\"/customer/\", {\r\n                            emails: [{ email: email }]\r\n                        }, \"POST\");\r\n                        customerId = newCustomer.id;\r\n                    } else {\r\n                        customerId = customers.customers[0].id;\r\n                    }\r\n\r\n                    // Tìm hoặc tạo tag\r\n                    const tagName = `Waitlist: ${title}`;\r\n                    const tags = await callCommerce7Api(\"/tag/customer/\", { q: tagName });\r\n                    let tagId;\r\n\r\n                    if (tags.total === 0) {\r\n                        const newTag = await callCommerce7Api(\"/tag/customer/\", {\r\n                            title: tagName,\r\n                            type: \"Manual\"\r\n                        }, \"POST\");\r\n                        tagId = newTag.id;\r\n                    } else {\r\n                        tagId = tags.tags[0].id;\r\n                    }\r\n\r\n                    const res = await callCommerce7Api(\"/tag-x-object/customer/\", {\r\n                        objectId: customerId,\r\n                        tagId: tagId\r\n                    }, \"POST\");\r\n                    jQuery(\"#loading-modal\").remove();\r\n                    renderModalSuccess();\r\n                    $(element).closest(selectors.waitlist).find('button').text(buttonTextWaitlisted)\r\n                } catch (e) {\r\n                    jQuery(\"#loading-modal\").remove();\r\n                    alert(\"System is busy at this moment. Please try again later.\")\r\n                }\r\n            }\r\n            const renderModalSuccess = () => {\r\n                if (jQuery(selectors.waitlistForm).length > 0) {\r\n                    jQuery(selectors.waitlistForm).html(setting.success_message);\r\n                    $(lastClickedButton).text(buttonTextWaitlisted)\r\n                    $(lastClickedButton).removeClass(\"show-waitlist-modal\")\r\n                    return\r\n                }\r\n                const modalContent =\r\n                    `<div class=\"waitlist-modal-wrapper\" id=\"waitlist-modal\"><div class=\"waitlist-modal-content\"><span class=\"close-wailtlist-modal\">+</span><h2>${setting.popup_title}</h2><div class=\"waitlist-form\"><p class=\"waitlist-notification\">${setting.success_message}</p></div></div></div>`;\r\n                jQuery(\"body\").append(modalContent);\r\n            }\r\n            // action for sold out\r\n            jQuery(document).on(\"click\", selectors.joinWaitlist, function () {\r\n                handleAssignTag($(this))\r\n\r\n            });\r\n            function validateEmail(email) {\r\n                const spamPattern = /^(test|fake|spam|noreply)[\\w.-]*@/i;\r\n                const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n                return emailRegex.test(email) && !spamPattern.test(email);\r\n            }\r\n\r\n            jQuery(document).on(\"click\", selectors.waitlistModalClose, function () {\r\n                jQuery(selectors.waitlistModal).remove();\r\n            });\r\n\r\n            triggerProducts();\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    });\r\n}\r\n"],"names":["jQuery","script","document","createElement","src","onload","initWaitlist","head","appendChild","async","ready","$","selectors","collection","collectionProduct","c7Wrapper","waitlist","form","showModal","joinWaitlist","waitlistModal","waitlistEmail","waitlistModalClose","waitlistNotification","waitlistForm","tenantId","data","config","baseUrl","credentials","btoa","createBasicAuth","callCommerce7Api","endpoint","options","method","queryString","URLSearchParams","toString","response","fetch","headers","body","JSON","stringify","ok","Error","json","error","console","configSetting","setting","getSetting","tenant_id","log","enabled","buttonText","button_text","buttonTextWaitlist","parse","btn_text","buttonTextWaitlisted","btn_text_submitted","buttonStyle","button_style","cssString","backgroundColor","textColor","outlineWidth","outlineStyle","outlineColor","hoverBackgroundColor","hoverTextColor","styleTag","innerHTML","customer","lastClickedButton","triggerProducts","token","getCookie","success","getCustomerData","collections","querySelectorAll","forEach","MutationObserver","_","observer","products","product","querySelector","atcForm","messError","loginMess","renderWaitlistContent","getAttribute","content","disconnect","observe","childList","subtree","getElementById","window","location","href","includes","e","productLink","callback","parts","split","title","pop","isSoldOut","html","cookieName","name","cookieArray","decodeURIComponent","cookie","i","length","charAt","substring","indexOf","on","click","this","hasClass","renderModalForClub","append","renderModalForSoldout","element","handleAssignTag","modalContent","titleProduct","popup_title","popup_body","email","emails","val","test","validateEmail","customers","q","customerId","total","id","tagName","tags","tagId","type","objectId","remove","renderModalSuccess","closest","find","text","alert","success_message","removeClass"],"sourceRoot":""}