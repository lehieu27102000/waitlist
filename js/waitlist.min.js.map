{"version":3,"file":"waitlist.min.js","mappings":"MAAA,GAAsB,oBAAXA,OAAwB,CAC/B,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,mEAEbH,EAAOI,OAAS,WACZC,GACJ,EAEAJ,SAASK,KAAKC,YAAYP,EAC9B,MACIK,IAIJ,SAASA,IACLN,OAAOE,UAAUO,OAAM,SAAUC,GAC7B,MAAMC,EAIQ,eAJRA,EAKI,OALJA,EAWoB,yBAXpBA,EAYY,iBAElB,IAAIC,EAAW,CAAC,EACZC,EAAoB,KAiExB,IAAIC,EAAS,CACTC,QAAS,+BACTC,SATaN,EAAE,wBAAwBO,KAAK,UAU5CC,YARqCC,KAErB,8EA4CpBC,eAAeC,EAAiBC,EAAUC,EAAU,KAAMC,EAAS,OAC/D,IACI,MAAMC,EAAyB,QAAXD,GAAoBD,EAAU,IAAM,IAAIG,gBAAgBH,GAASI,WAAa,GAE5FC,QAAiBC,MAAM,GAAGf,EAAOC,UAAUO,IAAWG,IAAe,CACvED,OAAQA,EACRM,QAAS,CACL,cAAiB,SAAShB,EAAOI,cACjC,OAAUJ,EAAOE,SACjB,eAAgB,oBAEpBe,KAAiB,SAAXP,EAAoBQ,KAAKC,UAAUV,GAAW,OAGxD,IAAKK,EAASM,GACV,MAAM,IAAIC,MAAM,4BAGpB,aAAaP,EAASQ,MAC1B,CAAE,MAAOC,GAEL,MADAC,QAAQD,MAAM,aAAcA,GACtBA,CACV,CACJ,CAGA,SAASE,EAAsBC,EAAaC,EAAWC,EAAWC,GAC9D,MAAMC,EAAQJ,EAAYK,MAAM,KAC1BC,EAAQF,EAAMG,OAASH,EAAMG,MACnC,IAAIC,GAAY,EACZC,EAAO,GACX,IAAKrC,EAMD,OALK6B,GAAcC,IACfO,GAAQ,4CACRA,GAAQ,kEAAkEH,kCAE9EH,EAASM,GAIRR,GAAcC,IACfM,GAAY,EACZC,GAAQ,6CAGZA,GAAQ,qDAAqDD,EAAY,GAAK,2BAA2BF,4BACzGH,EAASM,EACb,CAkBAjD,OAAOE,UAAUgD,GAAG,QApLL,wBAoLmC,SAAUC,GACxDnD,OAAO,2BAA2BoD,QAClC,MAAMN,EAAQ9C,OAAOqD,MAAMpC,KAAK,SAE5BP,EAAE2C,MAAMC,SAAS,YACjBC,EAAmB7C,EAAE2C,OAGzBrD,OAAO,QAAQwD,OAAOC,EALH,GAKuCX,EAAOpC,EAAE2C,OACvE,IACA,MAAME,EAAsBG,IACnB9C,GAGL+C,EAAgBD,EACV,EAEJD,EAAwB,CAACG,EAAcC,EAAcH,KACvD,IAAI9C,EASJ,OADAC,EAAoB6C,EAHhB,0cACAG,EACA,mCANAF,EAAgBD,EAQD,EAEjBC,EAAkBvC,MAAOsC,IAC3B,IACI,MAAMI,EAAQlD,GAAYA,EAASmD,QAAUnD,EAASmD,OAAO,IAAMnD,EAASmD,OAAO,GAAGD,MAAQlD,EAASmD,OAAO,GAAGD,MAAQ9D,OAhN9G,mBAgN8IgE,MACnJlB,EAAQY,EAAQzC,KAAK,SAG3B,GADAjB,OAAOW,GAAgCsC,KAAK,KA4DpD,SAAuBa,GAEnB,MADW,6BACDG,KAAKH,EACnB,CA9DaI,CAAcJ,KAAWA,EAE1B,YADA9D,OAAOW,GAAgCsC,KAAK,8BAGhDjD,OAAO,QAAQwD,OAAO,4JACtB,MAAMW,QAAkB9C,EAAiB,aAAc,CAAE+C,EAAGN,IAC5D,IAAIO,EAKAA,EAJoB,IAApBF,EAAUG,aACgBjD,EAAiB,aAAc,CACrD0C,OAAQ,CAAC,CAAED,MAAOA,KACnB,SACsBS,GAEZJ,EAAUA,UAAU,GAAGI,GAIxC,MAAMC,EAAU,aAAa1B,IACvB2B,QAAapD,EAAiB,iBAAkB,CAAE+C,EAAGI,IAC3D,IAAIE,EAOAA,EALe,IAAfD,EAAKH,aACgBjD,EAAiB,iBAAkB,CACpDyB,MAAO0B,EACPG,KAAM,UACP,SACYJ,GAEPE,EAAKA,KAAK,GAAGF,SAGPlD,EAAiB,0BAA2B,CAC1DuD,SAAUP,EACVK,MAAOA,GACR,QACH1E,OAAO,kBAAkB6E,SACzBC,IACApE,EAAEgD,GAASqB,QAAQpE,GAAoBqE,KAAK,UAAUC,KAAK,aAC/D,CAAE,MAAO9B,GACLnD,OAAO,kBAAkB6E,SACzBK,MAAM,yDACV,GAEEJ,EAAqB,KACvB,GAAI9E,OAAOW,GAAwBwE,OAAS,EAIxC,OAHAnF,OAAOW,GAAwBsC,KAAK,iCACpCvC,EAAEG,GAAmBoE,KAAK,mBAC1BvE,EAAEG,GAAmBuE,YAAY,uBAKrCpF,OAAO,QAAQwD,OADX,mRAC+B,EAGvCxD,OAAOE,UAAUgD,GAAG,QA7QF,oBA6QmC,WACjDS,EAAgBjD,EAAE2C,MAEtB,IAMArD,OAAOE,UAAUgD,GAAG,QAnRI,0BAmRmC,WACvDlD,OAtRe,2BAsRiB6E,QACpC,IA/QwBzD,WACpB,IACI,MAAMiE,EAwJI,CAACC,IAIf,IAHA,IAAIC,EAAOD,EAAa,IAEpBE,EADgBC,mBAAmBvF,SAASwF,QAChB7C,MAAM,KAC7B8C,EAAI,EAAGA,EAAIH,EAAYL,OAAQQ,IAAK,CAEzC,IADA,IAAID,EAASF,EAAYG,GACG,MAArBD,EAAOE,OAAO,IACjBF,EAASA,EAAOG,UAAU,GAE9B,GAA6B,IAAzBH,EAAOI,QAAQP,GACf,OAAOG,EAAOG,UAAUN,EAAKJ,OAAQO,EAAOP,OAEpD,CACA,MAAO,EAAE,EArKSY,CAAU,iBAClBnE,QAmEdR,eAA+BiE,GAC3B,IAAKA,IAAUvE,EAAOE,SAClB,MAAO,CACHgF,SAAS,EACT/E,KAAM,MAId,IACI,MAAMW,QAAiBC,MAAM,GAAGf,EAAOC,wBAAyB,CAC5DS,OAAQ,MACRM,QAAS,CACL,cAAiBuD,EACjB,OAAUvE,EAAOE,SACjB,eAAgB,sBAIxB,IAAKY,EAASM,GACV,MAAM,IAAIC,MAAM,sBAIpB,MAAO,CACH6D,SAAS,EACT/E,WAHeW,EAASQ,OAKhC,CAAE,MAAOC,GAEL,OADAC,QAAQD,MAAM,gCAAiCA,GACxC,CACH2D,SAAS,EACT/E,KAAM,KAEd,CACJ,CArG+BgF,CAAgBZ,GACvCzE,EAAWgB,EAASX,KACpB,MAAMiF,EAAchG,SAASiG,iBApBrB,0BAqBJD,GACAA,EAAYE,SAASC,IACjB,IAAIC,kBAAiB,CAACC,EAAGC,KACrB,MAAMC,EAAWJ,EAAWF,iBAvBzB,eA0BCM,IACAA,EAASL,SAASM,IACd,MAAMC,EAAWD,EAAQE,cAAcjG,GAGjCkG,EAAUH,EAAQE,cAAcjG,GAChC8B,EAAYiE,EAAQE,cAAc,eAClClE,EAAYgE,EAAQE,cAAc,8BACnCC,GAGDtE,EAFsBmE,EAAQE,cAAc,KACVE,aAAa,QACZrE,EAAWC,GAAW,SAAUqE,GAC/DJ,EAASK,UAAYD,CACzB,GAEJ,IAEJP,EAASS,aACb,IACDC,QAAQb,EAAY,CAAEc,WAAW,EAAMC,SAAS,GAAO,IAIlE,MAAMC,EAAYnH,SAASoH,eAhDpB,cAkDHD,GAAaE,OAAOC,SAASC,KAAKC,SAAS,cAC3C,IAAIpB,kBAAiB,CAACC,EAAGC,KACrB,MAAMG,EAAWzG,SAAS0G,cAAcjG,GACxC,GAAIgG,EAAU,CACV,MAAME,EAAUQ,EAAUT,cAAcjG,GAClC8B,EAAY4E,EAAUT,cAAc,eACpClE,EAAY2E,EAAUT,cAAc,8BACrCC,GACDtE,EAAsBgF,OAAOC,SAASC,KAAMhF,EAAWC,GAAW,SAAUqE,GACxEJ,EAASK,UAAYD,CACzB,IAEJP,EAASS,YACb,KACDC,QAAQG,EAAW,CAAEF,WAAW,EAAMC,SAAS,GAE1D,CAAE,MAAOjE,GACLb,QAAQqF,IAAIxE,EAChB,GA0NJyE,EACJ,GACJ,C","sources":["webpack://BlueOtter/./waitlist/js/app.js"],"sourcesContent":["if (typeof jQuery === 'undefined') {\r\n    const script = document.createElement('script');\r\n    script.src = 'https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js';\r\n\r\n    script.onload = function () {\r\n        initWaitlist();\r\n    };\r\n\r\n    document.head.appendChild(script);\r\n} else {\r\n    initWaitlist();\r\n}\r\n\r\n// Hàm khởi tạo waitlist\r\nfunction initWaitlist() {\r\n    jQuery(document).ready(function ($) {\r\n        const selectors = {\r\n            collection: \".c7-product-collection\",\r\n            collectionProduct: \".c7-product\",\r\n            c7Wrapper: \"c7-content\",\r\n            waitlist: \".c7-waitlist\",\r\n            form: \"form\",\r\n            showModal: \".show-waitlist-modal\",\r\n            joinWaitlist: \".waitlist-submit\",\r\n            waitlistModal: \".waitlist-modal-wrapper\",\r\n            waitlistEmail: \".waitlist-email\",\r\n            waitlistModalClose: \".close-wailtlist-modal\",\r\n            waitlistNotification: \".waitlist-notification\",\r\n            waitlistForm: \".waitlist-form\",\r\n        };\r\n        var customer = {};\r\n        var lastClickedButton = null;\r\n        const triggerProducts = async () => {\r\n            try {\r\n                const token = getCookie('customerToken');\r\n                const response = await getCustomerData(token);\r\n                customer = response.data\r\n                const collections = document.querySelectorAll(selectors.collection);\r\n                if (collections) {\r\n                    collections.forEach((collection) => {\r\n                        new MutationObserver((_, observer) => {\r\n                            const products = collection.querySelectorAll(\r\n                                selectors.collectionProduct\r\n                            );\r\n                            if (products) {\r\n                                products.forEach((product) => {\r\n                                    const waitlist = product.querySelector(selectors.waitlist);\r\n                                    // Check Sold Out & Render Join Waitlist\r\n\r\n                                    const atcForm = product.querySelector(selectors.form);\r\n                                    const messError = product.querySelector(\".c7-message\");\r\n                                    const loginMess = product.querySelector(\".c7-product__login-message\");\r\n                                    if (!atcForm) {\r\n                                        const productAnchor = product.querySelector(\"a\");\r\n                                        const productLink = productAnchor.getAttribute(\"href\");\r\n                                        renderWaitlistContent(productLink, messError, loginMess, function (content) {\r\n                                            waitlist.innerHTML = content;\r\n                                        });\r\n\r\n                                    }\r\n                                });\r\n                                observer.disconnect();\r\n                            }\r\n                        }).observe(collection, { childList: true, subtree: true });\r\n                    });\r\n                }\r\n\r\n                const c7Wrapper = document.getElementById(selectors.c7Wrapper);\r\n\r\n                if (c7Wrapper && window.location.href.includes(\"/product/\")) {\r\n                    new MutationObserver((_, observer) => {\r\n                        const waitlist = document.querySelector(selectors.waitlist);\r\n                        if (waitlist) {\r\n                            const atcForm = c7Wrapper.querySelector(selectors.form);\r\n                            const messError = c7Wrapper.querySelector(\".c7-message\");\r\n                            const loginMess = c7Wrapper.querySelector(\".c7-product__login-message\");\r\n                            if (!atcForm) {\r\n                                renderWaitlistContent(window.location.href, messError, loginMess, function (content) {\r\n                                    waitlist.innerHTML = content;\r\n                                });\r\n                            }\r\n                            observer.disconnect();\r\n                        }\r\n                    }).observe(c7Wrapper, { childList: true, subtree: true });\r\n                }\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        };\r\n        const tenantId = $(\"#waitlist-javascript\").data(\"tenant\")\r\n\r\n        const createBasicAuth = (credentials) => btoa(credentials);\r\n\r\n        const credentials = 'waitlist:qsoINUkmk1vVLVhzN3M0zYlf2goxXixT06iRXt9X9jBBF624cbuvv38RvjpwXmVo';\r\n        const base64Credentials = createBasicAuth(credentials);\r\n\r\n        var config = {\r\n            baseUrl: 'https://api.commerce7.com/v1',\r\n            tenantId: tenantId,\r\n            credentials: base64Credentials\r\n        };\r\n\r\n        async function getCustomerData(token) {\r\n            if (!token || !config.tenantId) {\r\n                return {\r\n                    success: false,\r\n                    data: null\r\n                };\r\n            }\r\n\r\n            try {\r\n                const response = await fetch(`${config.baseUrl}/customer/self`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': token,\r\n                        'tenant': config.tenantId,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('API request failed');\r\n                }\r\n\r\n                const data = await response.json();\r\n                return {\r\n                    success: true,\r\n                    data: data\r\n                };\r\n            } catch (error) {\r\n                console.error('Error fetching customer data:', error);\r\n                return {\r\n                    success: false,\r\n                    data: null\r\n                };\r\n            }\r\n        }\r\n        async function callCommerce7Api(endpoint, options = null, method = 'GET') {\r\n            try {\r\n                const queryString = method === 'GET' && options ? '?' + new URLSearchParams(options).toString() : '';\r\n\r\n                const response = await fetch(`${config.baseUrl}${endpoint}${queryString}`, {\r\n                    method: method,\r\n                    headers: {\r\n                        'Authorization': `Basic ${config.credentials}`,\r\n                        'tenant': config.tenantId,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: method === 'POST' ? JSON.stringify(options) : null\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Commerce7 Response Error');\r\n                }\r\n\r\n                return await response.json();\r\n            } catch (error) {\r\n                console.error('API Error:', error);\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        // Hàm render waitlist content đã được cập nhật\r\n        function renderWaitlistContent(productLink, messError, loginMess, callback) {\r\n            const parts = productLink.split(\"/\");\r\n            const title = parts.pop() || parts.pop();\r\n            let isSoldOut = false;\r\n            let html = '';\r\n            if (!customer) {\r\n                if (!messError && !loginMess) {\r\n                    html += '<h5 class=\"product-soldout\">Sold Out</h5>';\r\n                    html += `<button class=\"button primary show-waitlist-modal\" data-title=\"${title}\">Join Waitlist</button>`;\r\n                }\r\n                callback(html);\r\n                return;\r\n            }\r\n\r\n            if (!messError && !loginMess) {\r\n                isSoldOut = true\r\n                html += '<h5 class=\"product-soldout\">Sold Out</h5>';\r\n            }\r\n\r\n            html += `<button class=\"button primary show-waitlist-modal ${isSoldOut ? '' : 'for-club'}\" data-title=\"${title}\">Join Waitlist</button>`;\r\n            callback(html);\r\n        }\r\n\r\n        const getCookie = (cookieName) => {\r\n            var name = cookieName + \"=\";\r\n            var decodedCookie = decodeURIComponent(document.cookie);\r\n            var cookieArray = decodedCookie.split(';');\r\n            for (var i = 0; i < cookieArray.length; i++) {\r\n                var cookie = cookieArray[i];\r\n                while (cookie.charAt(0) === ' ') {\r\n                    cookie = cookie.substring(1);\r\n                }\r\n                if (cookie.indexOf(name) === 0) {\r\n                    return cookie.substring(name.length, cookie.length);\r\n                }\r\n            }\r\n            return \"\";\r\n        }\r\n\r\n        jQuery(document).on(\"click\", selectors.showModal, function (e) {\r\n            jQuery('.c7-product-popup-close').click();\r\n            const title = jQuery(this).data(\"title\");\r\n            let modalContent = ''\r\n            if ($(this).hasClass('for-club')) {\r\n                renderModalForClub($(this))\r\n                return;\r\n            }\r\n            jQuery(\"body\").append(renderModalForSoldout(modalContent, title, $(this)));\r\n        });\r\n        const renderModalForClub = (element) => {\r\n            if (!customer) {\r\n                return\r\n            }\r\n            handleAssignTag(element)\r\n            return;\r\n        }\r\n        const renderModalForSoldout = (modalContent, titleProduct, element) => {\r\n            if (customer) {\r\n                handleAssignTag(element)\r\n                return\r\n            }\r\n            modalContent =\r\n                '<div class=\"waitlist-modal-wrapper\" id=\"waitlist-modal\"><div class=\"waitlist-modal-content\"><span class=\"close-wailtlist-modal\">+</span><h2>Waitlist Signup</h2><p>Please add your email address below and we will notify you when this is available for purchase.</p><div class=\"waitlist-form\"><label>Email Address *</label><input type=\"email\" class=\"waitlist-email\"><p class=\"waitlist-notification\"></p><div class=\"button primary waitlist-submit\" data-title=\"' +\r\n                titleProduct +\r\n                '\">Submit</div></div></div></div>';\r\n            lastClickedButton = element\r\n            return modalContent;\r\n        }\r\n        const handleAssignTag = async (element) => {\r\n            try {\r\n                const email = customer && customer.emails && customer.emails[0] && customer.emails[0].email ? customer.emails[0].email : jQuery(selectors.waitlistEmail).val();\r\n                const title = element.data(\"title\");\r\n\r\n                jQuery(selectors.waitlistNotification).html(\"\");\r\n                if (!validateEmail(email) || !email) {\r\n                    jQuery(selectors.waitlistNotification).html('Input valid email address.');\r\n                    return;\r\n                }\r\n                jQuery(\"body\").append('<div class=\"waitlist-modal-wrapper loading-modal\" id=\"loading-modal\"><div class=\"waitlist-modal-content\"><div class=\"loading-spinner\"></div></div></div>');\r\n                const customers = await callCommerce7Api(\"/customer/\", { q: email });\r\n                let customerId;\r\n                if (customers.total === 0) {\r\n                    const newCustomer = await callCommerce7Api(\"/customer/\", {\r\n                        emails: [{ email: email }]\r\n                    }, \"POST\");\r\n                    customerId = newCustomer.id;\r\n                } else {\r\n                    customerId = customers.customers[0].id;\r\n                }\r\n\r\n                // Tìm hoặc tạo tag\r\n                const tagName = `Waitlist: ${title}`;\r\n                const tags = await callCommerce7Api(\"/tag/customer/\", { q: tagName });\r\n                let tagId;\r\n\r\n                if (tags.total === 0) {\r\n                    const newTag = await callCommerce7Api(\"/tag/customer/\", {\r\n                        title: tagName,\r\n                        type: \"Manual\"\r\n                    }, \"POST\");\r\n                    tagId = newTag.id;\r\n                } else {\r\n                    tagId = tags.tags[0].id;\r\n                }\r\n\r\n                const res = await callCommerce7Api(\"/tag-x-object/customer/\", {\r\n                    objectId: customerId,\r\n                    tagId: tagId\r\n                }, \"POST\");\r\n                jQuery(\"#loading-modal\").remove();\r\n                renderModalSuccess();\r\n                $(element).closest(selectors.waitlist).find('button').text('Waitlisted')\r\n            } catch (e) {\r\n                jQuery(\"#loading-modal\").remove();\r\n                alert(\"System is busy at this moment. Please try again later.\")\r\n            }\r\n        }\r\n        const renderModalSuccess = () => {\r\n            if (jQuery(selectors.waitlistForm).length > 0) {\r\n                jQuery(selectors.waitlistForm).html('Received! You\\'re on the list!');\r\n                $(lastClickedButton).text('Waitlisted')\r\n                $(lastClickedButton).removeClass(\"show-waitlist-modal\")\r\n                return\r\n            }\r\n            const modalContent =\r\n                '<div class=\"waitlist-modal-wrapper\" id=\"waitlist-modal\"><div class=\"waitlist-modal-content\"><span class=\"close-wailtlist-modal\">+</span><h2>Waitlist Signup</h2><div class=\"waitlist-form\"><p class=\"waitlist-notification\">Received! You\\'re on the list!</p></div></div></div>';\r\n            jQuery(\"body\").append(modalContent);\r\n        }\r\n        // action for sold out\r\n        jQuery(document).on(\"click\", selectors.joinWaitlist, function () {\r\n            handleAssignTag($(this))\r\n\r\n        });\r\n        function validateEmail(email) {\r\n            const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            return re.test(email);\r\n        }\r\n\r\n        jQuery(document).on(\"click\", selectors.waitlistModalClose, function () {\r\n            jQuery(selectors.waitlistModal).remove();\r\n        });\r\n\r\n        triggerProducts();\r\n    });\r\n}\r\n"],"names":["jQuery","script","document","createElement","src","onload","initWaitlist","head","appendChild","ready","$","selectors","customer","lastClickedButton","config","baseUrl","tenantId","data","credentials","btoa","async","callCommerce7Api","endpoint","options","method","queryString","URLSearchParams","toString","response","fetch","headers","body","JSON","stringify","ok","Error","json","error","console","renderWaitlistContent","productLink","messError","loginMess","callback","parts","split","title","pop","isSoldOut","html","on","e","click","this","hasClass","renderModalForClub","append","renderModalForSoldout","element","handleAssignTag","modalContent","titleProduct","email","emails","val","test","validateEmail","customers","q","customerId","total","id","tagName","tags","tagId","type","objectId","remove","renderModalSuccess","closest","find","text","alert","length","removeClass","token","cookieName","name","cookieArray","decodeURIComponent","cookie","i","charAt","substring","indexOf","getCookie","success","getCustomerData","collections","querySelectorAll","forEach","collection","MutationObserver","_","observer","products","product","waitlist","querySelector","atcForm","getAttribute","content","innerHTML","disconnect","observe","childList","subtree","c7Wrapper","getElementById","window","location","href","includes","log","triggerProducts"],"sourceRoot":""}