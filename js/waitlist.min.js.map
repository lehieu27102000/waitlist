{"version":3,"file":"waitlist.min.js","mappings":"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","sources":["webpack://highway29creative/./waitlist/js/app.js"],"sourcesContent":["if (typeof jQuery === 'undefined') {\r\n    const script = document.createElement('script');\r\n    script.src = 'https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js';\r\n\r\n    script.onload = function () {\r\n        initWaitlist();\r\n    };\r\n\r\n    document.head.appendChild(script);\r\n} else {\r\n    initWaitlist();\r\n}\r\n\r\n// Hàm khởi tạo waitlist\r\nfunction initWaitlist() {\r\n    jQuery(document).ready(function ($) {\r\n        const selectors = {\r\n            collection: \".c7-product-collection\",\r\n            collectionProduct: \".c7-product\",\r\n            c7Wrapper: \"c7-content\",\r\n            waitlist: \".c7-waitlist\",\r\n            form: \"form\",\r\n            showModal: \".show-waitlist-modal\",\r\n            joinWaitlist: \".waitlist-submit\",\r\n            waitlistModal: \".waitlist-modal-wrapper\",\r\n            waitlistEmail: \".waitlist-email\",\r\n            waitlistModalClose: \".close-wailtlist-modal\",\r\n            waitlistNotification: \".waitlist-notification\",\r\n            waitlistForm: \".waitlist-form\",\r\n        };\r\n\r\n        const triggerProducts = () => {\r\n            const collections = document.querySelectorAll(selectors.collection);\r\n            if (collections) {\r\n                collections.forEach((collection) => {\r\n                    new MutationObserver((_, observer) => {\r\n                        const products = collection.querySelectorAll(\r\n                            selectors.collectionProduct\r\n                        );\r\n                        if (products) {\r\n                            products.forEach((product) => {\r\n                                const waitlist = product.querySelector(selectors.waitlist);\r\n                                // Check Sold Out & Render Join Waitlist\r\n\r\n                                const atcForm = product.querySelector(selectors.form);\r\n                                const messError = product.querySelector(\".c7-message\");\r\n                                const loginMess = product.querySelector(\".c7-product__login-message\");\r\n                                if (!atcForm) {\r\n                                    const productAnchor = product.querySelector(\"a\");\r\n                                    const productLink = productAnchor.getAttribute(\"href\");\r\n                                    renderWaitlistContent(productLink, messError, loginMess, function (content) {\r\n                                        waitlist.innerHTML = content;\r\n                                    });\r\n\r\n                                }\r\n                            });\r\n                            observer.disconnect();\r\n                        }\r\n                    }).observe(collection, { childList: true, subtree: true });\r\n                });\r\n            }\r\n\r\n            const c7Wrapper = document.getElementById(selectors.c7Wrapper);\r\n\r\n            if (c7Wrapper && window.location.href.includes(\"/product/\")) {\r\n                new MutationObserver((_, observer) => {\r\n                    const waitlist = document.querySelector(selectors.waitlist);\r\n                    if (waitlist) {\r\n                        const atcForm = c7Wrapper.querySelector(selectors.form);\r\n                        const messError = c7Wrapper.querySelector(\".c7-message\");\r\n                        const loginMess = c7Wrapper.querySelector(\".c7-product__login-message\");\r\n                        if (!atcForm) {\r\n                            renderWaitlistContent(window.location.href, messError, loginMess, function (content) {\r\n                                waitlist.innerHTML = content;\r\n                            });\r\n                        }\r\n                        observer.disconnect();\r\n                    }\r\n                }).observe(c7Wrapper, { childList: true, subtree: true });\r\n            }\r\n        };\r\n        const tenantId = $(\"#waitlist-javascript\").data(\"tenant\")\r\n\r\n        const createBasicAuth = (credentials) => btoa(credentials);\r\n\r\n        const credentials = 'waitlist:qsoINUkmk1vVLVhzN3M0zYlf2goxXixT06iRXt9X9jBBF624cbuvv38RvjpwXmVo';\r\n        const base64Credentials = createBasicAuth(credentials);\r\n\r\n        var config = {\r\n            baseUrl: 'https://api.commerce7.com/v1',\r\n            tenantId: tenantId,\r\n            credentials: base64Credentials\r\n        };\r\n\r\n        async function getCustomerData(token) {\r\n            if (!token || !config.tenantId) {\r\n                return {\r\n                    success: false,\r\n                    data: null\r\n                };\r\n                // throw new Error('Empty tenant id or empty token');\r\n            }\r\n\r\n            try {\r\n                const response = await fetch(`${config.baseUrl}/customer/self`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': token,\r\n                        'tenant': config.tenantId,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('API request failed');\r\n                }\r\n\r\n                const data = await response.json();\r\n                return {\r\n                    success: true,\r\n                    data: data\r\n                };\r\n            } catch (error) {\r\n                console.error('Error fetching customer data:', error);\r\n                return {\r\n                    success: false,\r\n                    data: null\r\n                };\r\n            }\r\n        }\r\n        async function callCommerce7Api(endpoint, options = null, method = 'GET') {\r\n            try {\r\n                const queryString = method === 'GET' && options ? '?' + new URLSearchParams(options).toString() : '';\r\n\r\n                const response = await fetch(`${config.baseUrl}${endpoint}${queryString}`, {\r\n                    method: method,\r\n                    headers: {\r\n                        'Authorization': `Basic ${config.credentials}`,\r\n                        'tenant': config.tenantId,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: method === 'POST' ? JSON.stringify(options) : null\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Commerce7 Response Error');\r\n                }\r\n\r\n                return await response.json();\r\n            } catch (error) {\r\n                console.error('API Error:', error);\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        // Hàm render waitlist content đã được cập nhật\r\n        async function renderWaitlistContent(productLink, messError, loginMess, callback) {\r\n            const parts = productLink.split(\"/\");\r\n            const title = parts.pop() || parts.pop();\r\n            const token = getCookie('customerToken');\r\n            try {\r\n                const response = await getCustomerData(token);\r\n                let html = '';\r\n                if (!response.success) {\r\n                    if (!messError && !loginMess) {\r\n                        html += '<h5 class=\"product-soldout\">Sold Out</h5>';\r\n                        html += `<button class=\"button primary show-waitlist-modal\" data-title=\"${title}\">join waitlist</button>`;\r\n                    }\r\n                    callback(html);\r\n                    return;\r\n                }\r\n\r\n                if (!messError && !loginMess) {\r\n                    html += '<h5 class=\"product-soldout\">Sold Out</h5>';\r\n                }\r\n\r\n                html += `<button class=\"button primary show-waitlist-modal\" data-title=\"${title}\">join waitlist</button>`;\r\n                callback(html);\r\n            } catch (error) {\r\n                console.error('Error rendering waitlist content:', error);\r\n                callback('');\r\n            }\r\n        }\r\n\r\n        const getCookie = (cookieName) => {\r\n            var name = cookieName + \"=\";\r\n            var decodedCookie = decodeURIComponent(document.cookie);\r\n            var cookieArray = decodedCookie.split(';');\r\n            for (var i = 0; i < cookieArray.length; i++) {\r\n                var cookie = cookieArray[i];\r\n                while (cookie.charAt(0) === ' ') {\r\n                    cookie = cookie.substring(1);\r\n                }\r\n                if (cookie.indexOf(name) === 0) {\r\n                    return cookie.substring(name.length, cookie.length);\r\n                }\r\n            }\r\n            return \"\";\r\n        }\r\n\r\n        jQuery(document).on(\"click\", selectors.showModal, function (e) {\r\n            jQuery('.c7-product-popup-close').click();\r\n            const title = jQuery(this).data(\"title\");\r\n            const modalContent =\r\n                '<div class=\"waitlist-modal-wrapper\" id=\"waitlist-modal\"><div class=\"waitlist-modal-content\"><span class=\"close-wailtlist-modal\">+</span><h2>Waitlist Signup</h2><p>Please add your email address below and we will notify you when this is available for purchase.</p><div class=\"waitlist-form\"><label>Email Address *</label><input type=\"email\" class=\"waitlist-email\"><p class=\"waitlist-notification\"></p><div class=\"button primary waitlist-submit\" data-title=\"' +\r\n                title +\r\n                '\">Submit</div></div></div></div>';\r\n            jQuery(\"body\").append(modalContent);\r\n        });\r\n\r\n        jQuery(document).on(\"click\", selectors.joinWaitlist, async function () {\r\n            try {\r\n                const email = jQuery(selectors.waitlistEmail).val();\r\n                const title = jQuery(this).data(\"title\");\r\n\r\n                jQuery(selectors.waitlistNotification).html(\"\");\r\n                if (!validateEmail(email)) {\r\n                    jQuery(selectors.waitlistNotification).html('Input valid email address.');\r\n                    return;\r\n                }\r\n                const customers = await callCommerce7Api(\"/customer/\", { q: email });\r\n                let customerId;\r\n                if (customers.total === 0) {\r\n                    const newCustomer = await callCommerce7Api(\"/customer/\", {\r\n                        emails: [{ email: email }]\r\n                    }, \"POST\");\r\n                    customerId = newCustomer.id;\r\n                } else {\r\n                    customerId = customers.customers[0].id;\r\n                }\r\n\r\n                // Tìm hoặc tạo tag\r\n                const tagName = `Waitlist: ${title}`;\r\n                const tags = await callCommerce7Api(\"/tag/customer/\", { q: tagName });\r\n                let tagId;\r\n\r\n                if (tags.total === 0) {\r\n                    const newTag = await callCommerce7Api(\"/tag/customer/\", {\r\n                        title: tagName,\r\n                        type: \"Manual\"\r\n                    }, \"POST\");\r\n                    tagId = newTag.id;\r\n                } else {\r\n                    tagId = tags.tags[0].id;\r\n                }\r\n\r\n                // Gán tag cho customer\r\n                await callCommerce7Api(\"/tag-x-object/customer/\", {\r\n                    objectId: customerId,\r\n                    tagId: tagId\r\n                }, \"POST\");\r\n\r\n                // Hiển thị thông báo thành công\r\n                jQuery(selectors.waitlistForm).html('Received! You\\'re on the list!');\r\n\r\n            } catch (e) {\r\n                jQuery(selectors.waitlistNotification).html('System is busy at this moment. Please try again later.');\r\n            }\r\n        });\r\n        function validateEmail(email) {\r\n            const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            return re.test(email);\r\n        }\r\n\r\n        jQuery(document).on(\"click\", selectors.waitlistModalClose, function () {\r\n            jQuery(selectors.waitlistModal).remove();\r\n        });\r\n\r\n        triggerProducts();\r\n    });\r\n}\r\n"],"names":["jQuery","script","document","createElement","src","onload","initWaitlist","head","appendChild","ready","$","selectors","config","baseUrl","tenantId","data","credentials","btoa","async","callCommerce7Api","endpoint","options","method","queryString","URLSearchParams","toString","response","fetch","headers","body","JSON","stringify","ok","Error","json","error","console","renderWaitlistContent","productLink","messError","loginMess","callback","parts","split","title","pop","token","getCookie","success","getCustomerData","html","cookieName","name","cookieArray","decodeURIComponent","cookie","i","length","charAt","substring","indexOf","on","e","click","modalContent","this","append","email","val","test","validateEmail","customers","q","customerId","total","emails","id","tagName","tags","tagId","type","objectId","remove","collections","querySelectorAll","forEach","collection","MutationObserver","_","observer","products","product","waitlist","querySelector","atcForm","getAttribute","content","innerHTML","disconnect","observe","childList","subtree","c7Wrapper","getElementById","window","location","href","includes","triggerProducts"],"sourceRoot":""}